{"version":3,"sources":["logo.svg","components/Navitem.js","components/Navbar.js","components/Social.js","contents/Portfolio.js","components/Widecard.js","contents/Test.js","contents/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navitem","id","this","props","item","to","tolink","onClick","activec","bind","className","Component","Navbar","activeitem","x","state","NavItemActive","length","document","getElementById","classList","remove","setState","add","Social","class","href","target","rel","Portfolio","text","speed","eraseDelay","Widecard","title","where","from","About","level","myskills","map","value","App","src","logo","alt","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ff0998e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nclass Navitem extends Component {\r\n    render() {\r\n        return (\r\n            <a id={this.props.item}>\r\n            <Link to={this.props.tolink} onClick={this.props.activec.bind(this,this.props.item)} className=\"App-linker\">{this.props.item}</Link>\r\n            </a>\r\n            )\r\n        }\r\n    }        \r\n    export default Navitem\r\n        ","import React, { Component } from 'react';\r\nimport Navitem from './Navitem';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            'NavItemActive':''\r\n        }\r\n    }\r\n    activeitem=(x)=>\r\n    {\r\n        if(this.state.NavItemActive.length>0){\r\n            document.getElementById(this.state.NavItemActive).classList.remove('active');\r\n        }\r\n        this.setState({'NavItemActive':x},()=>{\r\n            document.getElementById(this.state.NavItemActive).classList.add('active');\r\n        });\r\n    };\r\n    render() {\r\n        return (\r\n            <nav>\r\n                {/* <Navitem item=\"Soryong\" tolink=\"/\" activec={this.activeitem}></Navitem> */}\r\n                <Navitem item=\"Portfolio\" tolink=\"/portfolio\" activec={this.activeitem}></Navitem>\r\n                <Navitem item=\"About me\" tolink=\"/about\" activec={this.activeitem}></Navitem>\r\n            </nav>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Navbar\r\n    ","import React, { Component } from 'react';\r\n\r\nclass Social extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"social\">\r\n            <a href=\"https://github.com/blinssen\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-github\"></i></a>\r\n            {/* <a href=\"https://Instagram.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-instagram\"></i></a> */}\r\n            {/* <a href=\"https://www.facebook.com/\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-facebook-f\"></i></a> */}\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default Social\r\n    ","import React, { Component } from 'react';\r\nimport ReactTypingEffect from 'react-typing-effect';\r\n// import profilepic from '../';\r\nimport Social from '../components/Social'\r\n\r\n\r\n\r\nclass Portfolio extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App-body\">\r\n            {/* <img src={profilepic} alt=\"ProfilePic\" className=\"profilepic\"></img> */}\r\n            <ReactTypingEffect className=\"typingeffect\" text={['I am Bram Linssen','I am a web developer']} speed={100} eraseDelay={700}/>\r\n            <Social />\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Portfolio\r\n    ","import React, { Component } from 'react'\r\n\r\nclass Widecard extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"widecard\">\r\n            <div class=\"compdet\">\r\n            <h3>{this.props.title}</h3>\r\n            <h4 class=\"secondtext\">{this.props.where}</h4>\r\n            <h4 class=\"secondtext\">{this.props.from} - {this.props.to}</h4>\r\n            </div>\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\nexport default Widecard\r\n    ","import React, { Component } from 'react';\r\nimport Social from '../components/Social';\r\n\r\nclass Test extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App-body\">\r\n            <h1 className=\"subtopic\">Contact Me</h1>\r\n            <h3>Email  :   blinssen95@gmail.com</h3>\r\n            <Social />\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default Test\r\n    ","import React, { Component } from 'react'\r\nimport Widecard from '../components/Widecard';\r\n\r\nclass About extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            'myskills':['HTML','CSS','JS','Python','REACT JS','FIREBASE','Cloudant', 'MySQL', 'Ionic', 'Angular','Entity Framework', '.NET', 'Node-RED', 'Git', 'C#', 'TypeScript', 'Java', 'C']\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App-body\">\r\n            <h1 className=\"subtopic\">Personal</h1>\r\n            Bram Linssen\r\n            <h1 className=\"subtopic\">Education</h1>            \r\n            <Widecard title=\"Financial Administration\" level=\"MBO Level 3\" where=\"ROC Leeuwnborgh\" from=\"2011\" to=\"2013\"/>\r\n            <Widecard title=\"Financial Administration\" level=\"MBO Level 4\" where=\"ROC Leeuwnborgh\" from=\"2013\" to=\"2014\"/>\r\n            <Widecard title=\"HBO-IT\" where=\"Bachelor\" from=\"2015\" to=\"2020\"/>\r\n\r\n            <h1 className=\"subtopic\">Experience</h1>\r\n            <Widecard title=\"Bachelor HBO ICT\" where=\"Zuyd Hogeschool\" from=\"July 2017\" to=\"Present\"/>\r\n            <Widecard title=\"Financial Administration\" level=\"MBO Level 3\" where=\"ROC Leeuwnborgh\" from=\"2011\" to=\"2017\"/>\r\n\r\n            <h1 className=\"subtopic\">My Skills</h1>\r\n\r\n            {this.state.myskills.map((value)=>{\r\n                return <li>{value}</li>\r\n            })}\r\n\r\n            </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    export default About\r\n    ","import React from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Navbar from './components/Navbar';\r\nimport Portfolio from './contents/Portfolio';\r\nimport Test from './contents/Test';\r\nimport About from './contents/About';\r\nimport logo from './logo.svg';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n        <div className=\"App\">          \r\n          <header className=\"App-header\">\r\n            <div className=\"Header-row\">\r\n              <a className=\"Header-title\" href=\"/\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                <span className=\"App-title\">Soryong</span>\r\n              </a>\r\n              <nav className=\"Header-nav\">\r\n                <Navbar/>\r\n              </nav>\r\n            </div>      \r\n          </header>\r\n          {/* <Route exact path=\"/\">\r\n          <Test />    \r\n          </Route> */}\r\n          <Route exact path=\"/about\"> \r\n          <About />    \r\n          </Route>\r\n          <Route exact path=\"/portfolio\">\r\n          <Portfolio />    \r\n          </Route>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n  \r\n  export default App;\r\n  ","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}